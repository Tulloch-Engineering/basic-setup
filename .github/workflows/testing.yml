name: Testing

on: push

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up Docker Compose
        run: |
          docker-compose -f backend/tests/docker-compose.yml up -d

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.9'

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt

      - name: Run Pytest
        run: |
          source venv/bin/activate
          pip install pytest
          pytest backend/tests/test.py --maxfail=1 --disable-warnings -v

      - name: Generate Coverage
        run: |
          source venv/bin/activate
          pip install coverage
          coverage run -m pytest backend/tests/test.py --maxfail=1 --disable-warnings -v
          coverage report
          coverage_percentage=$(coverage report | grep -oP '\d+\%' | tr -d '%')
          if [ "$coverage_percentage" -lt 80 ]; then
            echo "Coverage is below 80% ($coverage_percentage%). Failing the workflow."
            exit 1
          else
            echo "Coverage is above or equal to 80% ($coverage_percentage%)."
          fi

      - name: Tear down Docker Compose
        if: always() # This ensures the step runs even if previous steps fail
        run: |
          docker-compose -f backend/tests/docker-compose.yml down
